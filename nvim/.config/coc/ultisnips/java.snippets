# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

snippet SPjframe "Description" b
this.setTitle("$1");
setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
setLocationRelativeTo(null);
setSize($2,$3)
setLayout(null);
setVisible(true);
$0
endsnippet

snippet SPimports "Description" b
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
endsnippet

snippet SPpaintDibujar "Description" b
//buffer
if(gBuffer==null){
	imag=createImage(this.getWidth(), this.getHeight());
	gBuffer=imag.getGraphics();
}
gBuffer.setColor(getBackground());
gBuffer.fillRect(0,0, this.getWidth(), this.getHeight());
gBuffer.setColor(Color.black);
//Parpadeo como global
Image imag;
Graphics gBuffer;

//Content

this.getGraphics().drawImage(imag, 0, 0, null);
endsnippet
